{
  "id": "31f040e5-e040-4336-878a-59a493289794",
  "name": "Terraform",
  "friendlyName": "Run Terraform",
  "description": "Run a Terraform on the build agent",
  "helpMarkDown": "[More Information](https://pgroene.wordpress.com/2016/06/14/getting-started-with-terraform-on-windows-and-azure/)",
  "category": "Deploy",
  "visibility": [ "Build", "Release" ],
  "author": "Peter Groenewegen - Xpirit",
  "version": {
    "Major": 2,
    "Minor": 5,
    "Patch": 1
  },
  "demands": [ "azureps" ],
  "minimumAgentVersion": "1.95.0",
  "inputs": [
     {
      "name": "TemplatePath",
      "type": "filePath",
      "label": "Terraform template path",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Source path where templates are stored"
    },
    {
      "name": "Arguments",
      "type": "string",
      "label": "Terraform arguments",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Arguments passed to terraform: plan, apply, validate etc"
    },
    {
      "name": "PlanPath",
      "type": "string",
      "label": "Plan file path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Path of plan file to use in apply step. Can also be used to specify alternate path to tf files."
    },
    {
      "name": "TerraformPath",
      "type": "filePath",
      "label": "Path to Terraform Executable",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Path where a specific version of Terraform exists. Useful for multiple versions."
      "visibleRule": "InstallTerraform == false"
    },
    {
      "name": "InstallTerraform",
      "type": "boolean",
      "label": "Install terraform",
      "defaultValue": "false",
      "required": true,
      "helpMarkDown": "Select if you want terraform deployed on your build agent"
    },    
    {
      "name": "Version",
      "type": "string",
      "label": "Terraform version",
      "defaultValue": "latest",
      "required": false,
      "helpMarkDown": "Version to install on the build agent, use latest for latest version",
      "visibleRule": "InstallTerraform == true"
    },
    {
      "name": "UseAzureSub",
      "type": "boolean",
      "label": "Use Azure service principal endpoint",
      "defaultValue": "false",
      "required": true,
      "helpMarkDown": "Select if you want to use an Azure endpoint configured with a Service Principal"
    },
    {
      "name": "ConnectedServiceNameSelector",
      "type": "pickList",
      "label": "Azure Connection Type",
      "required": true,
      "helpMarkDown": "",
      "defaultValue": "ConnectedServiceNameARM",
      "options": {
        "ConnectedServiceNameARM": "Azure Resource Manager"
      },
      "visibleRule": "UseAzureSub == true"
    },
    {
      "name": "ConnectedServiceNameARM",
      "type": "connectedService:AzureRM",
      "label": "Azure Subscription",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Select the Azure Resource Manager subscription.",
      "visibleRule": "UseAzureSub == true"
    }, 
    {
      "name": "ManageState",
      "type": "boolean",
      "label": "Init state in Azure storage",
      "defaultValue": "false",
      "required": true,
      "helpMarkDown": "Select if you want the extention to init the state in blobstorage",
      "visibleRule": "UseAzureSub == true"
    },
    {
      "name": "SpecifyStorageAccount",
      "type": "boolean",
      "label": "Specify Storage Account",
      "defaultValue": "false",
      "required": true,
      "helpMarkDown": "Select if you want to specify the storage account.",
      "visibleRule": "ManageState == true"
    },
    {
      "name": "StorageAccountResourceGroup",
      "type": "pickList",
      "label": "Resource Group",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Specify a pre-existing ARM resource group.",
      "properties": {
        "EditableOptions": "True"
      },
      "visibleRule": "SpecifyStorageAccount == true"
    },
    {
      "name": "StorageAccountRM",
      "type": "pickList",
      "label": "Storage Account",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Specify a pre-existing ARM storage account.",
      "properties": {
        "EditableOptions": "True"
      },
      "visibleRule": "SpecifyStorageAccount == true"
    },
    {
      "name": "StorageContainerName",
      "type": "string",
      "label": "Container Name",
      "defaultValue": "",
      "required": true,      
      "helpMarkDown": "Enter the name the container within the given StorageAccount.",
      "properties": {
        "EditableOptions": "True"
      },
      "visibleRule": "SpecifyStorageAccount == true"
    },
    {
      "name": "InitArguments",
      "type": "string",
      "label": "Additional Terraform Init arguments",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Arguments passed to terraform init",
      "visibleRule": "ManageState == true"
    }
  ],
  "dataSourceBindings": [
  {
    "target": "StorageAccountRM",
    "endpointId": "$(ConnectedServiceNameARM)",
    "dataSourceName": "AzureStorageAccountRM"
  },
  {
    "target": "StorageAccountResourceGroup",
    "endpointId": "$(ConnectedServiceNameARM)",
    "dataSourceName": "AzureResourceGroups"
  }
  ],
  "instanceNameFormat": "Terraform $(Arguments)",
  "execution": {
    "PowerShell3": {
      "target": "$(currentDirectory)\\Terraform.ps1"
    }
  }
}
